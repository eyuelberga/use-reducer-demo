{"version":3,"sources":["components/Todo.js","constants.js","reducers/request.js","App.js","index.js"],"names":["Post","id","title","completed","onCompleteTodoHandler","class","style","textDecoration","undefined","href","onClick","ACTION","REQUEST_STATUS","requestReducer","state","action","type","list","status","error","payload","payloadIndex","map","item","indexOf","slice","App","useReducer","todos","dispatch","todo","a","axios","put","useEffect","get","response","data","fetch","success","isLoading","hasFailed","marginLeft","marginTop","message","Todo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b226d7f0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Post = ({ id, title, completed, onCompleteTodoHandler }) => {\n  return (\n    <li class=\"collection-item\">\n      <div style={completed ? { textDecoration: \"line-through\" } : undefined}>\n        {title}\n        {!completed && (\n          <a href=\"#!\" class=\"secondary-content\">\n            <button\n              class=\"waves-effect waves-light btn btn-small\"\n              onClick={onCompleteTodoHandler}\n            >\n              <i class=\"material-icons left\">check</i>Done\n            </button>\n          </a>\n        )}\n      </div>\n    </li>\n  );\n};\n\nexport default Post;\n","export const ACTION = {\n  FETCH_LIST_SUCCESS: \"FETCH_ALL_SUCCESS\",\n  FETCH_LIST_FAILURE: \"FETCH_ALL_FAILURE\",\n  UPDATE_SUCCESS: \"UPDATE_SUCCESS\",\n  UPDATE_FAILURE: \"UPDATE_FAILURE\"\n};\nexport const REQUEST_STATUS = {\n  LOADING: \"loading\",\n  SUCCESS: \"success\",\n  ERROR: \"error\"\n};\n","import { REQUEST_STATUS, ACTION } from \"../constants\";\n\nconst requestReducer = (state, action) => {\n  switch (action.type) {\n    case ACTION.FETCH_LIST_SUCCESS: {\n      return {\n        ...state,\n        list: action.list,\n        status: REQUEST_STATUS.SUCCESS\n      };\n    }\n    case ACTION.FETCH_LIST_FAILURE: {\n      return {\n        ...state,\n        status: REQUEST_STATUS.ERROR,\n        error: action.error\n      };\n    }\n    case ACTION.UPDATE_SUCCESS:\n      const { list } = state;\n      const { payload } = action;\n      const payloadIndex = list.map(item => item.id).indexOf(payload.id);\n      return {\n        ...state,\n        list: [\n          ...list.slice(0, payloadIndex),\n          payload,\n          ...list.slice(payloadIndex + 1)\n        ]\n      };\n    case ACTION.UPDATE_FAILURE:\n      return {\n        ...state,\n        status: REQUEST_STATUS.ERROR,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n};\nexport default requestReducer;\n","import React, { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Todo from \"./components/Todo\";\nimport { REQUEST_STATUS, ACTION } from \"./constants\";\nimport requestReducer from \"./reducers/request\";\n\nfunction App() {\n  const [{ list: todos, status, error }, dispatch] = useReducer(\n    requestReducer,\n    {\n      list: [],\n      status: REQUEST_STATUS.LOADING,\n      error: null\n    }\n  );\n  const onCompleteTodoHandler = async todo => {\n    const completed = { ...todo, completed: true };\n    try {\n      await axios.put(\n        `https://jsonplaceholder.typicode.com/todos/${todo.id}`,\n        completed\n      );\n      dispatch({\n        type: ACTION.UPDATE_SUCCESS,\n        payload: completed\n      });\n    } catch (e) {\n      dispatch({\n        type: ACTION.UPDATE_FAILURE,\n        error: e\n      });\n    }\n  };\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await axios.get(\n          \"https://jsonplaceholder.typicode.com/todos\"\n        );\n        dispatch({\n          type: ACTION.FETCH_LIST_SUCCESS,\n          list: response.data\n        });\n      } catch (e) {\n        dispatch({\n          type: ACTION.FETCH_LIST_FAILURE,\n          error: e\n        });\n      }\n    };\n    fetch();\n  }, []);\n\n  const success = status === REQUEST_STATUS.SUCCESS;\n  const isLoading = status === REQUEST_STATUS.LOADING;\n  const hasFailed = status === REQUEST_STATUS.ERROR;\n\n  return (\n    <div class=\"container\">\n      <ul class=\"collection with-header\">\n        <li class=\"collection-header\">\n          <h4>Todo List</h4>\n        </li>\n        {isLoading && (\n          <div\n            class=\"preloader-wrapper big active\"\n            style={{ marginLeft: \"50%\", marginTop: \"20px\" }}\n          >\n            <div class=\"spinner-layer spinner-blue-only\">\n              <div class=\"circle-clipper left\">\n                <div class=\"circle\"></div>\n              </div>\n              <div class=\"gap-patch\">\n                <div class=\"circle\"></div>\n              </div>\n              <div class=\"circle-clipper right\">\n                <div class=\"circle\"></div>\n              </div>\n            </div>\n          </div>\n        )}\n        {hasFailed && (\n          <div class=\"row\">\n            <div class=\"col s12\">\n              <div class=\"card-panel red\">\n                <h5 class=\"card-title white-text\">Request Failed!</h5>\n                <p class=\"white-text\">{error.message}</p>\n              </div>\n            </div>\n          </div>\n        )}\n        {success &&\n          todos.map(({ title, completed, id }) => {\n            return (\n              <Todo\n                key={id}\n                title={title}\n                completed={completed}\n                onCompleteTodoHandler={() => {\n                  onCompleteTodoHandler({ title, completed, id });\n                }}\n              />\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}